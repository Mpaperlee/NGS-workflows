#!/usr/bin/env python
import argparse
import sys
import re
from itertools import *
parser = argparse.ArgumentParser(description="Filter the isoforms by the cov(2), exon numbers(2) and length(200). Use this script after cufflinks as a subsitution for next analysis")
parser.add_argument("-g","--gtf", action="store", dest="gtf",type=str, required=True, 
                    help="GTF file generated by cufflinks ")
parser.add_argument("-i","--isoforms", action="store",type = str, dest="isoforms", required=True,\
                     help="isoforms.fpkm_tracking file generated by cufflinks")
parser.add_argument("-o","--out", action="store",type = str, dest="out", default='filter.gtf',\
                    help="the name of the output file")
argvs = parser.parse_args()
LEN = 200
COV = 2
NUM = 2

def filter_dic(dic):
    for x in dic.keys():
        if float(dic[x]['trans_len']) < LEN or float(dic[x]['trans_cov']) < COV or float(dic[x]['exon']) < NUM:
            del dic[x]
        else:pass
    return dic
with open(argvs.isoforms) as IN1,open(argvs.gtf) as IN2:
        IN1_dic = {}
        for i in islice(IN1,1,None):
            ALL = i.strip().split('\t')
            IN1_dic[ALL[0]] = {}
            IN1_dic[ALL[0]]['trans_len'] = ALL[7]
            IN1_dic[ALL[0]]['trans_cov'] = ALL[8]
        for i in IN2.readlines():
            trans_id = re.findall(r'transcript_id "(.*?)";',i)[0]
            if i.strip().split('\t')[2] == 'transcript':
                IN1_dic[trans_id]['exon'] = 0
            elif i.strip().split('\t')[2] == 'exon':
                IN1_dic[trans_id]['exon'] += 1
        IN1_dic = filter_dic(IN1_dic)
with open(argvs.out,'w') as OUT ,open(argvs.gtf) as IN2:
    for i in IN2.readlines():
        ID = re.findall(r'transcript_id "(.*?)";',i)[0]
        if ID in IN1_dic:
            OUT.write(i)
        else:pass